"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Blog = void 0;
const typescript_json_serializer_1 = require("typescript-json-serializer");
const FormData = require("form-data");
class FileApi {
    constructor(axios, baseAppId, sellerUserId, sellerAppId) {
        this.multipartConfig = {};
        this.serializer = new typescript_json_serializer_1.JsonSerializer();
        this.axios = axios;
        this.baseAppId = baseAppId;
        this.sellerUserId = sellerUserId;
        this.sellerAppId = sellerAppId;
    }
    /*
     * ファイル保存
     * 戻り値: コンテンツJSON
     */
    save(file, filename, isPublic, onProgress) {
        return __awaiter(this, void 0, void 0, function* () {
            const formData = new FormData();
            formData.append("file", file, {
                filename: filename,
                filepath: '/',
                contentType: 'image/png'
            });
            const url = isPublic ?
                `/sdk/${this.sellerUserId}/${this.sellerAppId}/public_blob/create`
                :
                    `/sdk/${this.sellerUserId}/${this.sellerAppId}/blob/create`;
            return yield this.axios.postForm(url, formData, {
                headers: { 'content-type': 'multipart/form-data' },
                onUploadProgress: onProgress
            })
                .then(res => {
                const r = this.serializer.deserializeObject(res.data, Blog);
                return r !== null && r !== void 0 ? r : Promise.reject();
            })
                .catch(err => {
                return Promise.reject(err);
            });
        });
    }
    // /*
    // * ファイル更新
    // * 戻り値: なし
    // */
    // public async update(
    //   file: File,
    //   key: string
    // ): Promise<any> {
    //   const formData = new FormData()
    //   formData.append("file", file)
    //   formData.append("key", key)
    //
    //   return await this.axios.post(
    //     `/sdk/${this.userId}/${this.appId}/blob/update`,
    //     formData,
    //     this.multipartConfig
    //   )
    //     .then(res => {
    //       const r = this.serializer.deserializeObject(res.data, Blog)
    //       return r ?? Promise.reject()
    //     })
    //     .catch(err => {
    //       return Promise.reject(err)
    //     })
    // }
    /*
    * ファイル削除
    * 戻り値: なし
    */
    delete(key) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.axios.post(`/sdk/${this.sellerUserId}/${this.sellerAppId}/blob/delete`, { key: key })
                .then(res => {
                return;
            })
                .catch(err => {
                return Promise.reject(err);
            });
        });
    }
    /*
    * ファイル取得
    * 戻り値: なし
    */
    getSignedUrl(key) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.axios.post(`/sdk/${this.sellerUserId}/${this.sellerAppId}/blob/get`, { key: key })
                .then(res => {
                const r = this.serializer.deserializeObject(res.data, Blog);
                return r !== null && r !== void 0 ? r : Promise.reject();
            })
                .catch(err => {
                return Promise.reject(err);
            });
        });
    }
}
exports.default = FileApi;
let Blog = class Blog {
    constructor(key, url) {
        this.key = key;
        this.url = url;
    }
};
Blog = __decorate([
    (0, typescript_json_serializer_1.JsonObject)(),
    __param(0, (0, typescript_json_serializer_1.JsonProperty)({ name: "key", required: true })),
    __param(1, (0, typescript_json_serializer_1.JsonProperty)({ name: "url", required: true })),
    __metadata("design:paramtypes", [String, String])
], Blog);
exports.Blog = Blog;
